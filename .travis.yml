language: cpp
sudo: required
git:
    submodules: false
matrix: 
  include:
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - BUILD_TYPE=Debug
        - DIST_NAME="xenial"
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - BUILD_TYPE=Release
        - DIST_NAME="xenial"
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - BUILD_TYPE=Debug
        - DIST_NAME="bionic"
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - BUILD_TYPE=Release
        - DIST_NAME="bionic"

before_install:
  - echo "Installing dependencies from apt ..."
  - if [[ "${DIST_NAME}" == "xenial" ]]; then sudo add-apt-repository -y ppa:mc3man/xerus-media; fi
  - if [[ "${DIST_NAME}" == "bionic" ]]; then sudo add-apt-repository -y ppa:mc3man/bionic-media; fi
  - sudo apt-get -qq update
  - sudo apt-get -y install pkg-config
  - sudo apt-get -y install libassimp-dev libglfw3-dev libglew-dev
  - sudo apt-get install -y ffmpeg
  - echo "Cloning repo-dependencies from github ..."
  - ./scripts/setup_dependencies.sh
  - echo "Downloading MuJoCo ..."
  - mkdir -p ~/.mujoco
  - wget https://www.roboti.us/download/mujoco200_linux.zip
  - unzip mujoco200_linux.zip -d ~/.mujoco/
  - echo "Configuring anaconda and making and env. for the build ..."
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n travis_env python=3.6 setuptools numpy scipy
  - conda activate travis_env
script:
  - if [ -n "${BUILD_TYPE}" ]; then
      mkdir -p build && cd build;
      cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DLOCO_CORE_BUILD_WINDOWED_VISUALIZER=ON -DLOCO_CORE_BUILD_HEADLESS_VISUALIZER=OFF -DLOCO_CORE_BUILD_DOCS=OFF -DLOCO_CORE_BUILD_EXAMPLES=ON -DLOCO_CORE_BUILD_TESTS=ON -DLOCO_CORE_BUILD_PYTHON_BINDINGS=ON  -DPYTHON_EXECUTABLE=$HOME/miniconda/envs/travis_env/bin/python3.6 -DPYTHON_LIBRARY=$HOME/miniconda/envs/travis_env/lib/libpython3.6m.so -DPYTHON_INCLUDE_DIR=$HOME/miniconda/envs/travis_env/include/python3.6m ..;
      make -j4;
    fi